# Rekall Memory Forensics

from rekall.plugins.windows import common

class WindowsPshView(common.WinProcessFilter):
    "Find hidden processes (filter from 'psxview' plugin)"

    __name = "hybis"

    METHODS = common.WinProcessFilter.METHODS
    # + ["PSScan", "Thrdproc"]

    __args = [
        dict(name="method", choices=METHODS, type="ChoiceArray",
             default=METHODS, help="Method to list processes.",
             override=True),
    ]


    def calculate(self):
        result = [] #dict()
        for eprocess in self.filter_processes():
            psinfo = dict()
            scanres = dict()

            for method in self.plugin_args.method:
               scanres[method] = eprocess.obj_offset in self.session.GetParameter("pslist_%s" % method)

            if eprocess.pid == 4 and scanres['Handles'] == True and scanres["PsActiveProcessHead"] == False:
	          psinfo["pid"] = int(eprocess.UniqueProcessId)
        	  psinfo["name"] = str(eprocess.ImageFileName)
       		  psinfo["offset"] = eprocess.obj_offset
#	          psinfo["psscan"] = scanres
	          result.append(psinfo)

                #if int(eprocess.ExitTime) == 0:
                #TODO: aggiungere storico qui o in HyBIS? forse meglio hybis...
                #TODO: aggiungere scala priorita

        return result

    def render(self, renderer):
	    print self.calculate()
